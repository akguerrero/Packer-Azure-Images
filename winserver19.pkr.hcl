
variable "client_id" {
   default =   env("ARM_CLIENT_ID")
}
variable "subscription_id" {
   default =   env("ARM_SUBSCRIPTION_ID")
}
variable "client_secret" {
   default =   env("ARM_CLIENT_SECRET")
}
variable "tenant_id" {
   default =   env("ARM_TENANT_ID")
}
variable "location" {
    type = string
    default = "East US"
}
# managed_image_name debe tener el mismo nombre
# que el image definition creado en la galeria
variable "managed_image_name" {
    type = string
    default = "Windows-Server-2019"
}
variable "managed_image_resource_group_name" {
    type = string
    default = "myPackerImages"
}
variable "vm_size" {
    type = string
    default = "Standard_DS2_v2"
}
source "azure-arm" "autogenerated_1" {

  client_id                         = var.client_id
  client_secret                     = var.client_secret
  subscription_id                   = var.subscription_id
  tenant_id                         = var.tenant_id
  image_offer                       = "WindowsServer"
  image_publisher                   = "MicrosoftWindowsServer"
  image_sku                         = "2019-datacenter-gensecond"
  location                          = var.location
  os_type                           = "Windows"
  vm_size                           = var.vm_size

  // Image Gallery
  shared_image_gallery_destination {
    subscription = "c9642077-afde-461c-9e7c-81536f8e0e97"
    resource_group = var.managed_image_resource_group_name
    gallery_name = "vm_images"
    image_name = var.managed_image_name
    image_version = "1.0.0"
    replication_regions = ["East US"]
    storage_account_type = "Standard_LRS"
  }
  shared_image_gallery_timeout = "120m"
  managed_image_name                = var.managed_image_name
  managed_image_resource_group_name = var.managed_image_resource_group_name

  // Communicator
  communicator                      = "winrm"
  winrm_insecure                    = true
  winrm_timeout                     = "5m"
  winrm_use_ssl                     = true
  winrm_username                    = "packer"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]
  provisioner "powershell" {
    inline = [
      "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
      "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
      "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
      "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
  }
}

